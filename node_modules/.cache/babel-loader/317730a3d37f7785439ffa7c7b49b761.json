{"ast":null,"code":"import _taggedTemplateLiteral from \"/Volumes/macOS SD/Users/c.mostafa/Projects/ha-tech-task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Volumes/macOS SD/Users/c.mostafa/Projects/ha-tech-task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Volumes/macOS SD/Users/c.mostafa/Projects/ha-tech-task/src/Characters/CharacterCard.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n  font-family: \\\"Roboto\\\", sans-serif;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { format as timeAgo } from 'timeago.js';\nimport { isEmpty as _isEmpty, capitalize as _capitalize } from 'lodash-es';\nexport default function CharactersCard(props) {\n  var classes = useStyles();\n  var id = props.id,\n      name = props.name,\n      status = props.status,\n      species = props.species,\n      type = props.type,\n      gender = props.gender,\n      origin = props.origin,\n      location = props.location,\n      image = props.image,\n      episodes = props.episodes,\n      created = props.created;\n  var info = Object.entries({\n    status: status,\n    species: species,\n    type: type,\n    gender: gender,\n    origin: origin.name,\n    location: location.name\n  }).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        label = _ref2[0],\n        value = _ref2[1];\n\n    return React.createElement(CharactersInfo.Item, {\n      key: \"\".concat(label, \"-\").concat(value),\n      label: _capitalize(label),\n      value: _isEmpty(value) ? '--' : _capitalize(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  });\n  var episodesInfo = episodes.map(function (ep) {\n    return React.createElement(CharactersInfo.Item, {\n      key: \"\".concat(ep.episode, \"-\").concat(ep.name),\n      label: ep.id + ')  ' + _capitalize(ep.episode),\n      value: _capitalize(ep.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  });\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    title: name,\n    image: image,\n    className: classes.media,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(CardHeader, {\n    title: name,\n    subheader: \"id: \".concat(id, \" - created \").concat(timeAgo(created)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(CharactersInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, info), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(CharactersInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, episodesInfo)));\n}\nvar useStyles = makeStyles(function (theme) {\n  return {\n    card: {\n      width: 300,\n      textAlign: 'left',\n      marginTop: 16\n    },\n    media: {\n      height: 300\n    }\n  };\n});\nvar CharactersInfo = styled.ul(_templateObject());\nCharactersInfo.Item = styled(function (props) {\n  return React.createElement(\"li\", {\n    className: props.className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"\".concat(props.label, \": \")), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \" \".concat(props.value)));\n})(_templateObject2());","map":{"version":3,"sources":["/Volumes/macOS SD/Users/c.mostafa/Projects/ha-tech-task/src/Characters/CharacterCard.js"],"names":["React","styled","Card","CardHeader","CardMedia","CardContent","makeStyles","format","timeAgo","isEmpty","_isEmpty","capitalize","_capitalize","CharactersCard","props","classes","useStyles","id","name","status","species","type","gender","origin","location","image","episodes","created","info","Object","entries","map","label","value","episodesInfo","ep","episode","card","media","theme","width","textAlign","marginTop","height","CharactersInfo","ul","Item","className"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { format as timeAgo } from 'timeago.js';\nimport { isEmpty as _isEmpty, capitalize as _capitalize } from 'lodash-es'\n\n\nexport default function CharactersCard(props) {\n  const classes = useStyles()\n\n  const {\n    id,\n    name,\n    status,\n    species,\n    type,\n    gender,\n    origin, // { name, url }\n    location, // { name, url }\n    image,\n    episodes,\n    created, // '2017-11-04T18:48:46.250Z'\n  } = props\n\n  const info = Object.entries({\n    status,\n    species,\n    type,\n    gender,\n    origin: origin.name,\n    location: location.name,\n  }).map(([label, value]) => (\n    <CharactersInfo.Item\n      key={`${label}-${value}`}\n      label={_capitalize(label)}\n      value={_isEmpty(value) ? '--' :_capitalize(value)}\n    />))\n\n  const episodesInfo = episodes\n    .map((ep) => (\n      <CharactersInfo.Item\n        key={`${ep.episode}-${ep.name}`}\n        label={ep.id + ')  ' + _capitalize(ep.episode)}\n        value={_capitalize(ep.name)}\n      />))\n\n  return (\n    <Card\n      className={classes.card}\n    >\n      <CardMedia\n        title={name}\n        image={image}\n        className={classes.media}\n      />\n      <CardHeader\n        title={name}\n        subheader={`id: ${id} - created ${timeAgo(created)}`}\n      />\n      <CardContent>\n        <CharactersInfo>\n          {info}\n        </CharactersInfo>\n        <hr/>\n        <CharactersInfo>\n          {episodesInfo}\n        </CharactersInfo>\n      </CardContent>\n    </Card>\n  )\n}\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    width: 300,\n    textAlign: 'left',\n    marginTop: 16,\n  },\n  media: {\n    height: 300,\n  },\n}))\n\nconst CharactersInfo = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  font-family: \"Roboto\", sans-serif;\n`\n\nCharactersInfo.Item = styled((props) => (\n  <li className={props.className}>\n    <small>{`${props.label}: `}</small>\n    <strong>{` ${props.value}`}</strong>\n  </li>\n))``\n"]},"metadata":{},"sourceType":"module"}