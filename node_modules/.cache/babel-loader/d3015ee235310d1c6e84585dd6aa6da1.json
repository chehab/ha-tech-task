{"ast":null,"code":"var _jsxFileName = \"/Volumes/macOS SD/Users/c.mostafa/Projects/ha-tech-task/src/Characters/CharactersList.js\";\nimport React, { useCallback } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { connect, useDispatch } from 'react-redux';\nimport { get as _get } from 'lodash-es';\nimport CharactersCard from './CharacterCard';\nimport Paginate from './components/Paginate';\nimport { charactersActionCreators } from './charactersActions';\n\nfunction CharactersList(props) {\n  var pagesCount = props.pagesCount,\n      isLoading = props.isLoading,\n      currentPage = props.currentPage,\n      charactersList = props.charactersList;\n  var dispatch = useDispatch();\n  var loadPage = useCallback(function (pageNum) {\n    if (!isLoading && currentPage !== pageNum) {\n      dispatch(charactersActionCreators.LIST_ALL.REQUEST(pageNum));\n    }\n  }, [dispatch, isLoading, currentPage]);\n  var nextPage = useCallback(function () {\n    return loadPage(currentPage + 1);\n  }, [loadPage, currentPage]);\n  var prevPage = useCallback(function () {\n    return loadPage(currentPage - 1);\n  }, [loadPage, currentPage]);\n\n  if (!charactersList.length) {\n    loadPage(1);\n  }\n\n  var characters = charactersList.map(function (charactersInfo) {\n    return React.createElement(CharactersCard, Object.assign({\n      key: charactersInfo.id\n    }, charactersInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(React.Fragment, null, React.createElement(Grid, {\n    container: true,\n    spacing: 10,\n    direction: \"row\",\n    alignItems: \"stretch\",\n    alignContent: \"stretch\",\n    justify: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, characters), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Paginate, {\n    onNext: nextPage,\n    onPrev: prevPage,\n    onSelect: loadPage,\n    pagesCount: pagesCount,\n    currentPage: currentPage,\n    hidden: !charactersList.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })));\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    charactersList: _get(state, 'Characters.characterList', []),\n    currentPage: _get(state, 'Characters.page', 1),\n    totalCount: _get(state, 'Characters.count', 1),\n    pagesCount: _get(state, 'Characters.pagesCount', 1),\n    isLoading: _get(state, 'Characters.isLoading', false)\n  };\n}\n\nexport default connect(mapStateToProps)(CharactersList);","map":{"version":3,"sources":["/Volumes/macOS SD/Users/c.mostafa/Projects/ha-tech-task/src/Characters/CharactersList.js"],"names":["React","useCallback","Grid","connect","useDispatch","get","_get","CharactersCard","Paginate","charactersActionCreators","CharactersList","props","pagesCount","isLoading","currentPage","charactersList","dispatch","loadPage","pageNum","LIST_ALL","REQUEST","nextPage","prevPage","length","characters","map","charactersInfo","id","mapStateToProps","state","ownProps","totalCount"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport { connect, useDispatch } from 'react-redux'\n\nimport { get as _get } from 'lodash-es'\n\nimport CharactersCard from './CharacterCard'\nimport Paginate from './components/Paginate'\nimport { charactersActionCreators } from './charactersActions'\n\n\nfunction CharactersList(props) {\n  const {\n    pagesCount,\n    isLoading,\n    currentPage,\n    charactersList,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const loadPage = useCallback(\n    (pageNum) => {\n      if (!isLoading && currentPage !== pageNum) {\n        dispatch(charactersActionCreators.LIST_ALL.REQUEST(pageNum))\n      }\n    },\n    [dispatch, isLoading, currentPage]\n  )\n\n  const nextPage = useCallback(\n    () => loadPage(currentPage + 1),\n    [loadPage, currentPage]\n  )\n\n  const prevPage = useCallback(\n    () => loadPage(currentPage - 1),\n    [loadPage, currentPage]\n  )\n\n  if (!charactersList.length) {\n    loadPage(1)\n  }\n\n  const characters = charactersList\n    .map((charactersInfo) => (<CharactersCard key={charactersInfo.id} {...charactersInfo} />))\n\n  return (\n    <>\n      <Grid\n        container\n        spacing={10}\n        direction=\"row\"\n        alignItems=\"stretch\"\n        alignContent=\"stretch\"\n        justify=\"space-between\"\n      >\n        {characters}\n      </Grid>\n\n\n      <Grid\n        container\n        justify=\"center\"\n      >\n        <Paginate\n          onNext={nextPage}\n          onPrev={prevPage}\n          onSelect={loadPage}\n          pagesCount={pagesCount}\n          currentPage={currentPage}\n          hidden={!charactersList.length}\n        />\n      </Grid>\n    </>\n  )\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    charactersList: _get(state, 'Characters.characterList', []),\n    currentPage: _get(state, 'Characters.page', 1),\n    totalCount: _get(state, 'Characters.count', 1),\n    pagesCount: _get(state, 'Characters.pagesCount', 1),\n    isLoading: _get(state, 'Characters.isLoading', false),\n  }\n}\n\nexport default connect(mapStateToProps)(CharactersList)\n"]},"metadata":{},"sourceType":"module"}