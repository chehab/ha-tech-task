{"ast":null,"code":"var _jsxFileName = \"/Volumes/macOS SD/Users/c.mostafa/Projects/ha-tech-task/src/Characters/CharactersList.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { connect, useDispatch } from 'react-redux';\nimport { get as _get } from 'lodash-es';\nimport CharactersCard from './CharacterCard';\nimport Paginate from './components/Paginate';\nimport { charactersActionCreators } from './charactersActions';\n\nfunction CharactersList(_ref) {\n  var charactersList = _ref.charactersList,\n      currentPage = _ref.currentPage,\n      isLoading = _ref.isLoading;\n  var dispatch = useDispatch();\n  var loadPage = useCallback(function () {\n    var _console;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    (_console = console).log.apply(_console, ['foobar:'].concat(args));\n\n    if (!isLoading) {\n      dispatch(charactersActionCreators.LIST_ALL.REQUEST(currentPage + 1));\n    }\n  }, [isLoading, currentPage]);\n  var prevPage = useCallback(function () {\n    if (!isLoading) {\n      dispatch(charactersActionCreators.LIST_ALL.REQUEST(currentPage - 1));\n    }\n  }, [isLoading, currentPage]);\n\n  if (!charactersList.length) {\n    loadPage();\n  }\n\n  var characters = charactersList.map(function (charactersInfo) {\n    return React.createElement(CharactersCard, Object.assign({}, charactersInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"left\",\n    alignItems: \"stretch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, characters), React.createElement(Paginate, {\n    onNext: loadPage,\n    onPrev: prevPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    charactersList: _get(state, 'Characters.characterList', []),\n    currentPage: _get(state, 'Characters.page', 1),\n    totalCount: _get(state, 'Characters.count', 1),\n    isLoading: _get(state, 'Characters.isLoading', false)\n  };\n}\n\nexport default connect(mapStateToProps)(CharactersList);","map":{"version":3,"sources":["/Volumes/macOS SD/Users/c.mostafa/Projects/ha-tech-task/src/Characters/CharactersList.js"],"names":["React","useState","useEffect","useCallback","Grid","Button","ButtonGroup","connect","useDispatch","get","_get","CharactersCard","Paginate","charactersActionCreators","CharactersList","charactersList","currentPage","isLoading","dispatch","loadPage","args","console","log","LIST_ALL","REQUEST","prevPage","length","characters","map","charactersInfo","mapStateToProps","state","ownProps","totalCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AAEA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,WAA5B;AAEA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,wBAAT,QAAyC,qBAAzC;;AAGA,SAASC,cAAT,OAAoE;AAAA,MAA1CC,cAA0C,QAA1CA,cAA0C;AAAA,MAA1BC,WAA0B,QAA1BA,WAA0B;AAAA,MAAbC,SAAa,QAAbA,SAAa;AAClE,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA,MAAMW,QAAQ,GAAGhB,WAAW,CAC1B,YAAa;AAAA;;AAAA,sCAATiB,IAAS;AAATA,MAAAA,IAAS;AAAA;;AACX,gBAAAC,OAAO,EAACC,GAAR,kBAAY,SAAZ,SAA0BF,IAA1B;;AAEA,QAAI,CAACH,SAAL,EAAgB;AACdC,MAAAA,QAAQ,CAACL,wBAAwB,CAACU,QAAzB,CAAkCC,OAAlC,CAA0CR,WAAW,GAAG,CAAxD,CAAD,CAAR;AACD;AACF,GAPyB,EAQ1B,CAACC,SAAD,EAAYD,WAAZ,CAR0B,CAA5B;AAWA,MAAMS,QAAQ,GAAGtB,WAAW,CAC1B,YAAM;AACJ,QAAI,CAACc,SAAL,EAAgB;AACdC,MAAAA,QAAQ,CAACL,wBAAwB,CAACU,QAAzB,CAAkCC,OAAlC,CAA0CR,WAAW,GAAG,CAAxD,CAAD,CAAR;AACD;AACF,GALyB,EAM1B,CAACC,SAAD,EAAYD,WAAZ,CAN0B,CAA5B;;AASA,MAAI,CAACD,cAAc,CAACW,MAApB,EAA4B;AAC1BP,IAAAA,QAAQ;AACT;;AAED,MAAMQ,UAAU,GAAGZ,cAAc,CAC9Ba,GADgB,CACZ,UAACC,cAAD;AAAA,WAAqB,oBAAC,cAAD,oBAAoBA,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAArB;AAAA,GADY,CAAnB;AAGA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,OAAO,EAAC,MAHV;AAIE,IAAA,UAAU,EAAC,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGF,UANH,CADF,EAUE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAER,QAAlB;AAA4B,IAAA,MAAM,EAAEM,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD;;AAED,SAASK,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AACxC,SAAO;AACLjB,IAAAA,cAAc,EAAEL,IAAI,CAACqB,KAAD,EAAQ,0BAAR,EAAoC,EAApC,CADf;AAELf,IAAAA,WAAW,EAAEN,IAAI,CAACqB,KAAD,EAAQ,iBAAR,EAA2B,CAA3B,CAFZ;AAGLE,IAAAA,UAAU,EAAEvB,IAAI,CAACqB,KAAD,EAAQ,kBAAR,EAA4B,CAA5B,CAHX;AAILd,IAAAA,SAAS,EAAEP,IAAI,CAACqB,KAAD,EAAQ,sBAAR,EAAgC,KAAhC;AAJV,GAAP;AAMD;;AAED,eAAexB,OAAO,CAACuB,eAAD,CAAP,CAAyBhB,cAAzB,CAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { connect, useDispatch } from 'react-redux'\n\nimport { get as _get } from 'lodash-es'\n\nimport CharactersCard from './CharacterCard'\nimport Paginate from './components/Paginate'\nimport { charactersActionCreators } from './charactersActions'\n\n\nfunction CharactersList({ charactersList, currentPage, isLoading }) {\n  const dispatch = useDispatch()\n\n  const loadPage = useCallback(\n    (...args) => {\n      console.log('foobar:', ...args)\n\n      if (!isLoading) {\n        dispatch(charactersActionCreators.LIST_ALL.REQUEST(currentPage + 1))\n      }\n    },\n    [isLoading, currentPage]\n  )\n\n  const prevPage = useCallback(\n    () => {\n      if (!isLoading) {\n        dispatch(charactersActionCreators.LIST_ALL.REQUEST(currentPage - 1))\n      }\n    },\n    [isLoading, currentPage]\n  )\n\n  if (!charactersList.length) {\n    loadPage()\n  }\n\n  const characters = charactersList\n    .map((charactersInfo) => (<CharactersCard {...charactersInfo} />))\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"left\"\n        alignItems=\"stretch\"\n      >\n        {characters}\n      </Grid>\n\n      <Paginate onNext={loadPage} onPrev={prevPage}/>\n    </React.Fragment>\n  )\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    charactersList: _get(state, 'Characters.characterList', []),\n    currentPage: _get(state, 'Characters.page', 1),\n    totalCount: _get(state, 'Characters.count', 1),\n    isLoading: _get(state, 'Characters.isLoading', false),\n  }\n}\n\nexport default connect(mapStateToProps)(CharactersList)\n"]},"metadata":{},"sourceType":"module"}