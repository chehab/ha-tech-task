{"ast":null,"code":"import _slicedToArray from \"/Volumes/macOS SD/Users/c.mostafa/Projects/ha-tech-task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Volumes/macOS SD/Users/c.mostafa/Projects/ha-tech-task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Volumes/macOS SD/Users/c.mostafa/Projects/ha-tech-task/src/Characters/CharacterCard.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n  font-family: \\\"Roboto\\\";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { format as timeAgo } from 'timeago.js';\nimport { isEmpty as _isEmpty, capitalize as _capitalize } from 'lodash-es';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    card: {\n      maxWidth: 345,\n      textAlign: 'left',\n      margin: '10px'\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%' // 16:9\n\n    }\n  };\n});\nvar CharactersInfo = styled.ul(_templateObject());\nCharactersInfo.Item = styled(function (props) {\n  return React.createElement(\"li\", {\n    className: props.className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"\".concat(props.label, \": \")), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \" \".concat(props.value)));\n})(_templateObject2());\nexport default function CharactersCard(props) {\n  var classes = useStyles();\n  var id = props.id,\n      name = props.name,\n      status = props.status,\n      species = props.species,\n      type = props.type,\n      gender = props.gender,\n      origin = props.origin,\n      location = props.location,\n      image = props.image,\n      created = props.created;\n  var info = Object.entries({\n    status: status,\n    species: species,\n    type: type,\n    gender: gender,\n    origin: origin.name,\n    location: location.name\n  }).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        label = _ref2[0],\n        value = _ref2[1];\n\n    return React.createElement(CharactersInfo.Item, {\n      label: _capitalize(label),\n      value: _isEmpty(value) ? '--' : _capitalize(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n  });\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    title: name,\n    image: image,\n    className: classes.media,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(CardHeader, {\n    title: name,\n    subheader: \"id: \".concat(id, \" - created \").concat(timeAgo(created)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(CharactersInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, info))));\n}","map":{"version":3,"sources":["/Volumes/macOS SD/Users/c.mostafa/Projects/ha-tech-task/src/Characters/CharacterCard.js"],"names":["React","styled","Card","CardHeader","CardMedia","CardContent","Typography","makeStyles","format","timeAgo","isEmpty","_isEmpty","capitalize","_capitalize","useStyles","theme","card","maxWidth","textAlign","margin","media","height","paddingTop","CharactersInfo","ul","Item","props","className","label","value","CharactersCard","classes","id","name","status","species","type","gender","origin","location","image","created","info","Object","entries","map"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { format as timeAgo } from 'timeago.js';\nimport { isEmpty as _isEmpty, capitalize as _capitalize } from 'lodash-es'\n\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 345,\n    textAlign: 'left',\n    margin: '10px'\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n}))\n\n\nconst CharactersInfo = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  font-family: \"Roboto\";\n`\n\nCharactersInfo.Item = styled((props) => (\n  <li className={props.className}>\n    <small>{`${props.label}: `}</small>\n    <strong>{` ${props.value}`}</strong>\n  </li>\n))``\n\nexport default function CharactersCard(props) {\n  const classes = useStyles()\n\n  const {\n    id,\n    name,\n    status,\n    species,\n    type,\n    gender,\n    origin, // { name, url }\n    location, // { name, url }\n    image,\n    // episode, // ['https://rickandmortyapi.com/api/episode/1'],\n    created, // '2017-11-04T18:48:46.250Z'\n  } = props\n\n  const info = Object.entries({\n    status,\n    species,\n    type,\n    gender,\n    origin: origin.name,\n    location: location.name,\n  }).map(([label, value]) => (\n    <CharactersInfo.Item\n      label={_capitalize(label)}\n      value={_isEmpty(value) ? '--' :_capitalize(value)}\n    />))\n\n  return (\n    <Card\n      className={classes.card}\n    >\n      <CardMedia\n        title={name}\n        image={image}\n        className={classes.media}\n      />\n      <CardHeader\n        title={name}\n        subheader={`id: ${id} - created ${timeAgo(created)}`}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          <CharactersInfo>\n            {info}\n          </CharactersInfo>\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}